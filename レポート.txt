①Windowクラスとは
ウィンドウのスタイル、アイコン、カーソル、背景、ウィンドウプロシージャ（メッセージ処理関数）などを定義した構造体

〇構造体のメンバの説明
cbSize	構造体のサイズ（sizeof(WNDCLASSEX)を設定）
style	ウィンドウクラスのスタイル
lpfnWndProc	ウィンドウプロシージャの関数ポインタ。ウィンドウに送られてくるメッセージを処理する中心的な関数。
cbClsExtra	クラス用に追加で確保するメモリのサイズ（バイト単位）。通常は0。
cbWndExtra	ウィンドウ用に追加で確保するメモリのサイズ（バイト単位）。通常は0。
hInstance	アプリケーションインスタンスのハンドル。
hIcon	ウィンドウに表示されるアイコン（大アイコン）。
hCursor	ウィンドウ上で使用するカーソル（例：LoadCursor(NULL, IDC_ARROW)）。
hbrBackground	ウィンドウの背景色を指定するブラシ（例：(HBRUSH)(COLOR_WINDOW + 1)）。
lpszMenuName	ウィンドウで使用するメニューのリソース名。メニューを使用しない場合はNULL。
lpszClassName	ウィンドウクラスの名前（任意の文字列）。
hIconSm	タスクバーなどに表示される小さいアイコン。
-----------------------------------------------------------------------------
②winmainの引数の意味
hInstance	現在のアプリケーションインスタンスのハンドル。主にリソースの読み込みなどに使われる。
hPrevInstance	旧バージョンのWindowsで使われていたが、現在は常にNULL。無視してよい。
lpCmdLine	コマンドライン引数（文字列）。引数が必要な処理を行う際に利用する。
nCmdShow	ウィンドウの表示状態（最小化、通常表示など）を指定する定数。通常は SW_SHOW または SW_SHOWNORMAL を渡す。
-----------------------------------------------------------------------------
③createWindowExの引数と戻り値の意味
dwExStyle	拡張ウィンドウスタイル（例：WS_EX_CLIENTEDGE など）
lpClassName	登録済みのウィンドウクラス名
lpWindowName	ウィンドウのタイトルバーに表示する文字列
dwStyle	ウィンドウスタイル（例：WS_OVERLAPPEDWINDOW）
x, y	ウィンドウの初期位置（画面左上からの座標）
nWidth, nHeight	ウィンドウの幅と高さ
hWndParent	親ウィンドウのハンドル（無しの場合はNULL）
hMenu	メニューのハンドルまたはコントロールID
hInstance	アプリケーションインスタンスのハンドル
lpParam	ウィンドウ作成時に渡したいデータ（通常はNULL）

戻り値：成功時はウィンドウハンドル（HWND）、失敗時は NULL。失敗理由を確認するには GetLastError() を使用する。

-----------------------------------------------------------------------------
④メッセージループとコールバックの関係と仕組み
〇メッセージループの役割
Windowsアプリケーションは「イベント駆動型」であり、ユーザーの操作（マウス、キーボード、ウィンドウ移動など）に応じてメッセージ（イベント）を処理する必要がある。
そのために、アプリケーションはメッセージループを用いて、OSからのメッセージを受け取り、それをウィンドウに送る処理を常に行っている。

〇コールバック関数（ウィンドウプロシージャ）
DispatchMessage 関数により、メッセージは該当ウィンドウのウィンドウプロシージャ（コールバック関数）に届けられる。これは通常 WndProc などの名前で定義される関数。

〇関係と仕組み
・GetMessage でメッセージを取得
・DispatchMessage がそれを適切なウィンドウの WndProc に送る
・WndProc がコールバック関数としてメッセージを処理する

このように、メッセージループは常に動作し、コールバック関数（WndProc）でイベントに応答するという仕組みで、Windowsアプリケーションはユーザー操作に対応している。